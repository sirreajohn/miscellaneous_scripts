# -*- coding: utf-8 -*-
"""BERT_with sentiment_anal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/199rqPHlpgAA9c7sG0QzbCC5Rd7QNPr5i
"""

from sklearn import metrics
import tarfile
from ktrain import text
import ktrain
import tensorflow as tf
import numpy as np
import os.path
!pip3 install ktrain


my_tar = tarfile.open(
    '/content/drive/My Drive/Colab Notebooks/data_sets/aclImdb_v1.tar.gz')
my_tar.extractall()
my_tar.close()

IMDB_DATADIR = os.path.dirname('/content/aclImdb/')

(x_train, y_train), (x_test, y_test), preproc = text.texts_from_folder(datadir=IMDB_DATADIR,
                                                                       classes=[
                                                                           'pos', 'neg'],
                                                                       maxlen=500,
                                                                       train_test_names=[
                                                                           'train', 'test'],
                                                                       preprocess_mode='bert')

model = text.text_classifier(name='bert',
                             train_data=(x_train, y_train),
                             preproc=preproc)

learner = ktrain.get_learner(model=model,
                             train_data=(x_train, y_train),
                             val_data=(x_test, y_test),
                             batch_size=6)
learner.autofit(lr=2e-5, epochs=2)

predictor = ktrain.get_predictor(learner.model, preproc)

predictor.predict('i love csgo')

predictor.predict('i hate csgo')

learner.save_model(
    '/content/drive/My Drive/Colab Notebooks/data_sets/bert/bert.md5')

learner.plot()

predictor.save('/content/drive/My Drive/Colab Notebooks/data_sets/bert')

predictor.predict('measurement is not valid')

predictor.predict('you are very good ')


x_test

learner = ktrain.get_learner(model=model,
                             train_data=(x_train, y_train),
                             val_data=(x_test, y_test),
                             batch_size=6)
learner.load_model(
    '/content/drive/My Drive/Colab Notebooks/data_sets/bert/tf_model.h5')

y_pred = learner.predict()

y_pred_1 = np.argmax(y_pred, axis=1)

y_pred

y_test_1 = np.argmax(y_test, axis=1)

print(f" BERT METRICS : \n {metrics.classification_report(y_test_1,y_pred_1)}")
